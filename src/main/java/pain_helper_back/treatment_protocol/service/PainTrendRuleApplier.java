package pain_helper_back.treatment_protocol.service;

import lombok.extern.slf4j.Slf4j;
import org.springframework.core.annotation.Order;
import org.springframework.stereotype.Component;
import pain_helper_back.common.patients.entity.DrugRecommendation;
import pain_helper_back.common.patients.entity.Patient;
import pain_helper_back.common.patients.entity.Recommendation;
import pain_helper_back.common.patients.entity.Vas;
import pain_helper_back.treatment_protocol.entity.TreatmentProtocol;
import pain_helper_back.treatment_protocol.utils.DrugUtils;

import java.util.List;

/**
 * üîç PainTrendRuleApplier
 *
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∏–Ω–∞–º–∏–∫—É –±–æ–ª–∏ (VAS) –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –≤–∏–∑–∏—Ç—ã –ø–∞—Ü–∏–µ–Ω—Ç–∞.
 * –ï—Å–ª–∏ –±–æ–ª—å —Ä–µ–≥—Ä–µ—Å—Å–∏—Ä—É–µ—Ç (—É—Ö—É–¥—à–∞–µ—Ç—Å—è) –∏–ª–∏ –≤–µ–¥—ë—Ç —Å–µ–±—è –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ (—Å–∫–∞—á–µ—Ç –≤–≤–µ—Ä—Ö-–≤–Ω–∏–∑),
 * —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –∏ –æ—á–∏—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤.
 */
@Component
@Slf4j
@Order(1)
public class PainTrendRuleApplier implements TreatmentRuleApplier {

    private static final int MIN_HISTORY = 3; // –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞

    @Override
    public void apply(DrugRecommendation drug, Recommendation recommendation,
                      TreatmentProtocol tp, Patient patient) {

        // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –±–æ–ª–µ–≤—ã—Ö —à–∫–∞–ª –ø–∞—Ü–∏–µ–Ω—Ç–∞
        List<Integer> vasHistory = patient.getVas().stream()
                .map(Vas::getPainLevel)
                .toList();

        if (vasHistory.size() < MIN_HISTORY) return;

        if (isRegressing(vasHistory) || isUnstable(vasHistory)) {
            // –æ—á–∏—â–∞–µ–º –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã
            recommendation.getDrugs().forEach(DrugUtils::clearDrug);

            // –¥–æ–±–∞–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
            recommendation.getComments().add(
                    "[SYSTEM] Recommendation stopped: pain trend worsening or unstable. VAS history=" + vasHistory
            );

            log.warn("PainTrendRuleApplier triggered for patient {}. VAS history = {}", patient.getMrn(), vasHistory);
        }
    }

    /**
     * –†–µ–≥—Ä–µ—Å—Å–∏—è ‚Äî –±–æ–ª—å —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º –∏–∑–º–µ—Ä–µ–Ω–∏–µ–º.
     * –ù–∞–ø—Ä–∏–º–µ—Ä: [5, 6, 7] –∏–ª–∏ [4, 5, 5, 6].
     */
    private boolean isRegressing(List<Integer> vasHistory) {
        for (int i = 0; i < vasHistory.size() - 1; i++) {
            if (vasHistory.get(i) < vasHistory.get(i + 1)) {
                return true;
            }
        }
        return false;
    }

    /**
     * –ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å ‚Äî —Å–∫–∞—á–∫–∏ –±–æ–ª–∏ –≤–≤–µ—Ä—Ö –∏ –≤–Ω–∏–∑ –±–µ–∑ —É—Å—Ç–æ–π—á–∏–≤–æ–≥–æ —Ç—Ä–µ–Ω–¥–∞.
     * –ù–∞–ø—Ä–∏–º–µ—Ä: [7, 6, 7] –∏–ª–∏ [5, 7, 6, 7].
     */
    private boolean isUnstable(List<Integer> vasHistory) {
        if (vasHistory.size() < 3) return false;

        for (int i = 0; i < vasHistory.size() - 2; i++) {
            int a = vasHistory.get(i);
            int b = vasHistory.get(i + 1);
            int c = vasHistory.get(i + 2);

            // –µ—Å–ª–∏ —Å–Ω–∞—á–∞–ª–∞ –±–æ–ª—å –ø–∞–¥–∞–µ—Ç, –ø–æ—Ç–æ–º —Å–Ω–æ–≤–∞ —Ä–∞—Å—Ç—ë—Ç (–∏–ª–∏ –Ω–∞–æ–±–æ—Ä–æ—Ç)
            if ((a > b && b < c) || (a < b && b > c)) {
                return true;
            }
        }
        return false;
    }
}