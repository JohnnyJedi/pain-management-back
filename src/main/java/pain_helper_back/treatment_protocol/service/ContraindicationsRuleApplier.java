package pain_helper_back.treatment_protocol.service;

import lombok.extern.slf4j.Slf4j;
import org.springframework.core.annotation.Order;
import org.springframework.stereotype.Component;
import pain_helper_back.common.patients.entity.Diagnosis;
import pain_helper_back.common.patients.entity.DrugRecommendation;
import pain_helper_back.common.patients.entity.Patient;
import pain_helper_back.common.patients.entity.Recommendation;
import pain_helper_back.treatment_protocol.entity.TreatmentProtocol;
import pain_helper_back.treatment_protocol.utils.DrugUtils;
import pain_helper_back.treatment_protocol.utils.SanitizeUtils;

import java.util.HashSet;
import java.util.Set;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

//@Component
@Slf4j
@Order(2)
public class ContraindicationsRuleApplier implements TreatmentRuleApplier {

    /**
     * –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è ICD-–∫–æ–¥–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 571.201, V45.1103, E11.9 –∏ —Ç.–ø.)
     * - –ú–æ–∂–µ—Ç –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –±—É–∫–≤—ã (A-Z)
     * - –ó–∞ –Ω–µ–π –∏–¥—É—Ç –º–∏–Ω–∏–º—É–º 3 —Ü–∏—Ñ—Ä—ã
     * - –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ ‚Äî –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è —á–∞—Å—Ç—å —Å —Ç–æ—á–∫–æ–π –∏ –±—É–∫–≤–∞–º–∏/—Ü–∏—Ñ—Ä–∞–º–∏
     */
    private static final Pattern ICD_PATTERN = Pattern.compile("[A-Z]?[0-9]{3}(?:\\.[0-9A-Z]+)?");

    @Override    public void apply(DrugRecommendation drug, Recommendation recommendation, TreatmentProtocol tp, Patient patient) {
        // 1 –ï—Å–ª–∏ —É –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö, –≤—ã—Ö–æ–¥–∏–º (—á—Ç–æ–±—ã –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏)
        if (!DrugUtils.hasInfo(drug)) return;

        // 2 –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–∏–∞–≥–Ω–æ–∑–æ–≤ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ EMR –ø–∞—Ü–∏–µ–Ω—Ç–∞
        Set<Diagnosis> patientDiagnoses = patient.getEmr().getLast().getDiagnoses();
        if (patientDiagnoses == null || patientDiagnoses.isEmpty()) return;

        // 3 –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–æ–ª–µ contraindications –∏–∑ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å NA –∏–ª–∏ –ø—É—Å—Ç—ã–º)
        String raw = tp.getContraindications();
        if (raw == null || raw.trim().isEmpty() || raw.equalsIgnoreCase("NA"))
            return;

        // 4 –°–∞–Ω–∏—Ç–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏–π:
        // —É–±–∏—Ä–∞–µ–º –Ω–µ—Ä–∞–∑—Ä—ã–≤–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã, –¥–ª–∏–Ω–Ω—ã–µ —Ç–∏—Ä–µ, –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –∏ —Ç.–ø.
        String contraindications = SanitizeUtils.clean(raw);

        // 5 –ò–∑–≤–ª–µ–∫–∞–µ–º ICD-–∫–æ–¥—ã –∏–∑ –æ—á–∏—â–µ–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
        Set<String> contraindicationsSet = extractICDCodes(contraindications);

        // üîç –í—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –ª–æ–≥–∏ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
        log.info("Patient ICDs: {}", patientDiagnoses.stream().map(Diagnosis::getIcdCode).toList());
        log.info("Contra raw: {}", raw);
        log.info("Contra parsed: {}", contraindicationsSet);

        // 6 –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –¥–∏–∞–≥–Ω–æ–∑ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è–º–∏
        for (Diagnosis diagnosis : patientDiagnoses) {
            // –û—á–∏—â–∞–µ–º –∏ –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∫–æ–¥ –±–æ–ª–µ–∑–Ω–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞ (TRIM + UPPERCASE)
            String code = normalizeCode(diagnosis.getIcdCode());
            if (code.isEmpty()) continue;

            // –ò–∑–≤–ª–µ–∫–∞–µ–º "–æ—Å–Ω–æ–≤–Ω—É—é —á–∞—Å—Ç—å" –∫–æ–¥–∞ ‚Äî –¥–æ —Ç–æ—á–∫–∏ –∏ 1 —Ü–∏—Ñ—Ä—É –ø–æ—Å–ª–µ (571.201 ‚Üí 571.2)
            String baseCode = getBaseCode(code);

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ª–∏ –±–∞–∑–æ–≤–∞—è —á–∞—Å—Ç—å —Å –ª—é–±–æ–π –∏–∑ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏–π
            boolean matchFound = contraindicationsSet.stream()
                    .map(this::getBaseCode)    // —É –≤—Å–µ—Ö –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏–π –±–µ—Ä—ë–º –±–∞–∑—É (571.201 ‚Üí 571.2)
                    .map(this::normalizeCode)  // –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º
                    .anyMatch(c -> c.equals(baseCode)); // —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –Ω–∞–ø—Ä—è–º—É—é

            // 7 –ï—Å–ª–∏ –Ω–∞—à–ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ ‚Äî –æ—á–∏—â–∞–µ–º –≤—Å–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
            if (matchFound) {
                recommendation.getDrugs().forEach(DrugUtils::clearDrug);
                recommendation.getComments().add(
                        "System: avoid for contraindications (match by base ICD): " +
                                diagnosis.getDescription() + " (" + diagnosis.getIcdCode() + ")"
                );
                log.info("Avoid triggered by contraindications (base match): patient={}, code={}, desc={}",
                        patient.getId(), diagnosis.getIcdCode(), diagnosis.getDescription());
                return; //  —Å—Ä–∞–∑—É –≤—ã—Ö–æ–¥–∏–º, —Ç.–∫. –¥–∞–ª—å—à–µ –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Å–º—ã—Å–ª–∞ –Ω–µ—Ç
            }
        }
    }

    /**
     * –ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç –∫–æ–¥ (—É–¥–∞–ª—è–µ—Ç –º—É—Å–æ—Ä –∏ –¥–µ–ª–∞–µ—Ç –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä)
     * –ù–∞–ø—Ä–∏–º–µ—Ä: " 571.201 " ‚Üí "571.201"
     */
    private String normalizeCode(String code) {
        return code == null ? "" : SanitizeUtils.clean(code).toUpperCase();
    }

    /**
     * –ò–∑–≤–ª–µ–∫–∞–µ—Ç –≤—Å–µ ICD-–∫–æ–¥—ã –∏–∑ –¥–ª–∏–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: "571.201 OR 571.501 OR 571.901")
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ (Set), —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏–∫–∞—Ç–æ–≤.
     */
    private Set<String> extractICDCodes(String contraindications) {
        Set<String> codes = new HashSet<>();
        Matcher matcher = ICD_PATTERN.matcher(contraindications);
        while (matcher.find()) {
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π –∫–æ–¥, –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞—è –µ–≥–æ
            codes.add(normalizeCode(matcher.group()));
        }
        return codes;
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç "–±–∞–∑–æ–≤—É—é —á–∞—Å—Ç—å" ICD-–∫–æ–¥–∞ ‚Äî –¥–æ —Ç–æ—á–∫–∏ –∏ –æ–¥–Ω–æ–π —Ü–∏—Ñ—Ä—ã –ø–æ—Å–ª–µ.
     * –ü—Ä–∏–º–µ—Ä:
     *  - "571.201" ‚Üí "571.2"
     *  - "E11.9" ‚Üí "E11.9"
     *  - "571" ‚Üí "571"
     */
    private String getBaseCode(String code) {
        if (code == null) return "";
        int dotIndex = code.indexOf('.');
        if (dotIndex != -1 && dotIndex + 2 <= code.length()) {
            return code.substring(0, Math.min(dotIndex + 2, code.length()));
        }
        return code; // –µ—Å–ª–∏ —Ç–æ—á–∫–∏ –Ω–µ—Ç ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤–µ—Å—å –∫–æ–¥
    }
}